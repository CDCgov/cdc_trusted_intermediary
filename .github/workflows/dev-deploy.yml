name: Deploy to Dev Environment

on:
  push:
    branches:
      - dev
  workflow_dispatch:

jobs:

  terraform-deploy:
    name: Dev Infrastructure Deploy
    uses: ./.github/workflows/terraform-deploy_reusable.yml
    with:
      ENVIRONMENT: dev
      TERRAFORM_DIRECTORY: operations/environments/dev
      SLACK_WEBHOOK_ALERT: ${{ secrets.SLACK_WEBHOOK_ALERT }}
      TERRAFORM_APPLY_PARAMETERS: -var="alert_slack_webhook=$SLACK_WEBHOOK_ALERT"
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CDC_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_CDC_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_CDC_DMZ_C1_SUBSCRIPTION_ID }}
      VPN_TLS_KEY: ${{ secrets.VPN_TLS_KEY }}
      VPN_CA_CERTIFICATE: ${{ secrets.VPN_CA_CERTIFICATE }}
      VPN_GITHUB_CERTIFICATE: ${{ secrets.VPN_GITHUB_CERTIFICATE}}
      VPN_GITHUB_SECRET_KEY: ${{ secrets.VPN_GITHUB_SECRET_KEY }}

  dev-deploy:
    name: Dev Application Deploy
    needs: terraform-deploy
    uses: ./.github/workflows/deploy_reusable.yml
    with:
      ENVIRONMENT: dev
      REPO: trusted-intermediary-router
      REPO_DOCS: trusted-intermediary-docs
      APP: ${{ needs.terraform-deploy.outputs.APP }}
      REGISTRY: ${{ needs.terraform-deploy.outputs.REGISTRY }}
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CDC_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_CDC_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_CDC_DMZ_C1_SUBSCRIPTION_ID }}
