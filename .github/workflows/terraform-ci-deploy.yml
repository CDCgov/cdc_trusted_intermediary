name: Terraform CI Deploy

on:
  pull_request:
    branches:
      - main
    paths:
      - 'operations'
  workflow_dispatch:

jobs:

  terraform-deploy:
    name: 'Terraform Deploy'
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_USE_OIDC: true
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: operations/environments/pr

    outputs:
      REGISTRY: ${{ steps.export-terraform-output.outputs.REGISTRY }}
      APP: ${{ steps.export-terraform-output.outputs.APP }}
      ACR_USERNAME: ${{ steps.export-terraform-output.outputs.ACR_USERNAME }}
      ACR_PASSWORD: ${{ steps.export-terraform-output.outputs.ACR_PASSWORD }}

    steps:

    - uses: actions/checkout@v3

    - name: Terraform Init
      id: init
      run: terraform init -backend-config="key=pr_${{ github.event.number }}.tfstate"

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Apply
      run: terraform apply -auto-approve -input=false -var="pr_number=${{ github.event.number }}"

    - id: export-terraform-output
      name: Export Terraform Output
      run: |
        echo "REGISTRY=$(terraform output -raw registry)" >> $GITHUB_OUTPUT
        echo "APP=$(terraform output -raw publish_app)" >> $GITHUB_OUTPUT
        echo "ACR_USERNAME=$(terraform output -raw acr_username)" >> $GITHUB_OUTPUT
        echo "ACR_PASSWORD=$(terraform output -raw acr_password)" >> $GITHUB_OUTPUT

  pr-deploy:
    name: 'PR Deploy'
    needs: terraform-deploy
    uses: ./.github/workflows/deploy_reusable.yml
    with:
      ENVIRONMENT: pr-${{ github.event.number }}
      REPO: trusted-intermediary-router
      APP: ${{ needs.terraform-deploy.outputs.APP }}
      REGISTRY: ${{ needs.terraform-deploy.outputs.REGISTRY }}
    secrets:
      ACR_USERNAME: ${{ needs.terraform-deploy.outputs.ACR_USERNAME }}
      ACR_PASSWORD: ${{ needs.terraform-deploy.outputs.ACR_PASSWORD }}
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  destroy-environment:
    name: 'Destroy PR Environment'
    needs: pr-deploy
    if: always()
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_USE_OIDC: true
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: operations/environments/pr

    steps:

      - uses: actions/checkout@v3

      - name: Terraform Init
        id: init
        run: terraform init -backend-config="key=pr_${{ github.event.number }}.tfstate"

      - name: Terraform Destroy
        run: terraform destroy -auto-approve -input=false -var="pr_number=${{ github.event.number }}"
